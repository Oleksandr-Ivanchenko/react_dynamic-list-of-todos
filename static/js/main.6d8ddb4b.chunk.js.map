{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","onFilterTitle","onFilterStatus","className","onChange","e","target","value","map","todo","classNames","completed","type","readOnly","checked","title","onClick","userId","id","URL","getTodos","a","fetch","response","json","selectedUserId","user","CurrentUser","useState","setUser","useEffect","getUser","then","catch","console","log","name","email","phone","App","setSelectedUserId","setTodos","filteredTodos","setFilteredTodos","getTodosFromServer","todosFromServer","filter","item","includes","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d8ddb4b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[]\n  selectUser: (userId: number) => void\n  onFilterTitle: (title: string) => void\n  onFilterStatus: (title: string) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n  onFilterTitle,\n  onFilterStatus,\n} : Props) => (\n  <div className=\"TodoList\">\n    <div className=\"TodoList__search\">\n      <h4>Search:</h4>\n      <div className=\"TodoList__search-fields\">\n        <label className=\"TodoList__search-label\">\n          by Title\n          <input\n            className=\"TodoList__search-input\"\n            data-cy=\"filterByTitle\"\n            onChange={(e) => onFilterTitle(e.target.value)}\n          />\n        </label>\n        <label className=\"TodoList__search-label\">\n          by Status\n          <select\n            onChange={(e) => onFilterStatus(e.target.value)}\n            className=\"TodoList__search-input\"\n          >\n            <option>all</option>\n            <option>active</option>\n            <option>completed</option>\n          </select>\n        </label>\n      </div>\n    </div>\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map((todo) => (\n          <li\n            data-cy=\"listOfTodos\"\n            key={todo.id}\n            className={classNames(\n              'TodoList__item',\n              {\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              },\n            )}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n              />\n\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId);\n              }}\n            >\n\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const URL = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(`${URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(selectedUserId: number): Promise<User> {\n  const response = await fetch(`${URL}/users/${selectedUserId}`);\n\n  const user = await response.json();\n\n  return user;\n}\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedUserId: number\n};\n\nexport const CurrentUser: React.FC<Props> = ({ selectedUserId }) => {\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    if (user?.id !== selectedUserId) {\n      getUser(selectedUserId)\n        .then(setUser)\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.log('User not find');\n        });\n    }\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {user\n        ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected user: ${user.id}`}</span>\n            </h2>\n\n            <h3\n              className=\"CurrentUser__name\"\n              data-cy=\"userName\"\n            >\n              {user.name}\n            </h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </>\n        )\n        : (\n          'Loading...'\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  const selectUser = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  const getTodosFromServer = async () => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setFilteredTodos(todosFromServer);\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.log('Todo not find');\n      });\n  };\n\n  const onFilterTitle = (title: string) => {\n    setFilteredTodos(todos.filter(item => item.title.includes(title)));\n  };\n\n  const onFilterStatus = (status: string) => {\n    setFilteredTodos(todos.filter(item => {\n      switch (status) {\n        case 'all':\n          return true;\n          break;\n        case 'completed':\n          return item.completed;\n          break;\n        case 'active':\n          return !item.completed;\n          break;\n        default:\n          return false;\n      }\n    }));\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={filteredTodos}\n          selectUser={selectUser}\n          onFilterTitle={onFilterTitle}\n          onFilterStatus={onFilterStatus}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <>\n              <CurrentUser selectedUserId={selectedUserId} />\n              <button\n                type=\"button\"\n                data-cy=\"userButton\"\n                onClick={() => setSelectedUserId(0)}\n              >\n                Clear\n              </button>\n            </>\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}